function p(){}function G(t,n){for(const e in n)t[e]=n[e];return t}function S(t){return t()}function N(){return Object.create(null)}function d(t){t.forEach(S)}function O(t){return typeof t=="function"}function H(t,n){return t!=t?n==n:t!==n||t&&typeof t=="object"||typeof t=="function"}function I(t){return Object.keys(t).length===0}function J(t,...n){if(t==null)return p;const e=t.subscribe(...n);return e.unsubscribe?()=>e.unsubscribe():e}function K(t,n,e){t.insertBefore(n,e||null)}function z(t){t.parentNode.removeChild(t)}function L(t){return document.createElement(t)}function D(t){return document.createTextNode(t)}function Q(){return D(" ")}function R(){return D("")}function V(t){return Array.from(t.childNodes)}function W(t,n,{bubbles:e=!1,cancelable:o=!1}={}){const c=document.createEvent("CustomEvent");return c.initCustomEvent(t,e,o,n),c}let _;function h(t){_=t}function y(){if(!_)throw new Error("Function called outside component initialization");return _}function X(t){y().$$.after_update.push(t)}function Y(t){y().$$.on_destroy.push(t)}function Z(){const t=y();return(n,e,{cancelable:o=!1}={})=>{const c=t.$$.callbacks[n];if(c){const i=W(n,e,{cancelable:o});return c.slice().forEach(u=>{u.call(t,i)}),!i.defaultPrevented}return!0}}function tt(t,n){const e=t.$$.callbacks[n.type];e&&e.slice().forEach(o=>o.call(this,n))}const m=[],P=[],g=[],q=[],A=Promise.resolve();let x=!1;function B(){x||(x=!0,A.then(F))}function nt(){return B(),A}function k(t){g.push(t)}const E=new Set;let $=0;function F(){const t=_;do{for(;$<m.length;){const n=m[$];$++,h(n),et(n.$$)}for(h(null),m.length=0,$=0;P.length;)P.pop()();for(let n=0;n<g.length;n+=1){const e=g[n];E.has(e)||(E.add(e),e())}g.length=0}while(m.length);for(;q.length;)q.pop()();x=!1,E.clear(),h(t)}function et(t){if(t.fragment!==null){t.update(),d(t.before_update);const n=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,n),t.after_update.forEach(k)}}const b=new Set;let l;function ot(){l={r:0,c:[],p:l}}function ct(){l.r||d(l.c),l=l.p}function M(t,n){t&&t.i&&(b.delete(t),t.i(n))}function rt(t,n,e,o){if(t&&t.o){if(b.has(t))return;b.add(t),l.c.push(()=>{b.delete(t),o&&(e&&t.d(1),o())}),t.o(n)}}function st(t,n){const e={},o={},c={$$scope:1};let i=t.length;for(;i--;){const u=t[i],a=n[i];if(a){for(const r in u)r in a||(o[r]=1);for(const r in a)c[r]||(e[r]=a[r],c[r]=1);t[i]=a}else for(const r in u)c[r]=1}for(const u in o)u in e||(e[u]=void 0);return e}function ut(t){return typeof t=="object"&&t!==null?t:{}}function it(t){t&&t.c()}function T(t,n,e,o){const{fragment:c,on_mount:i,on_destroy:u,after_update:a}=t.$$;c&&c.m(n,e),o||k(()=>{const r=i.map(S).filter(O);u?u.push(...r):d(r),t.$$.on_mount=[]}),a.forEach(k)}function U(t,n){const e=t.$$;e.fragment!==null&&(d(e.on_destroy),e.fragment&&e.fragment.d(n),e.on_destroy=e.fragment=null,e.ctx=[])}function at(t,n){t.$$.dirty[0]===-1&&(m.push(t),B(),t.$$.dirty.fill(0)),t.$$.dirty[n/31|0]|=1<<n%31}function ft(t,n,e,o,c,i,u,a=[-1]){const r=_;h(t);const s=t.$$={fragment:null,ctx:null,props:i,update:p,not_equal:c,bound:N(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(n.context||(r?r.$$.context:[])),callbacks:N(),dirty:a,skip_bound:!1,root:n.target||r.$$.root};u&&u(s.root);let w=!1;if(s.ctx=e?e(t,n.props||{},(f,v,...j)=>{const C=j.length?j[0]:v;return s.ctx&&c(s.ctx[f],s.ctx[f]=C)&&(!s.skip_bound&&s.bound[f]&&s.bound[f](C),w&&at(t,f)),v}):[],s.update(),w=!0,d(s.before_update),s.fragment=o?o(s.ctx):!1,n.target){if(n.hydrate){const f=V(n.target);s.fragment&&s.fragment.l(f),f.forEach(z)}else s.fragment&&s.fragment.c();n.intro&&M(t.$$.fragment),T(t,n.target,n.anchor,n.customElement),F()}h(r)}class lt{$destroy(){U(this,1),this.$destroy=p}$on(n,e){const o=this.$$.callbacks[n]||(this.$$.callbacks[n]=[]);return o.push(e),()=>{const c=o.indexOf(e);c!==-1&&o.splice(c,1)}}$set(n){this.$$set&&!I(n)&&(this.$$.skip_bound=!0,this.$$set(n),this.$$.skip_bound=!1)}}export{lt as S,J as a,ft as b,K as c,rt as d,R as e,ct as f,ot as g,M as h,O as i,z as j,Z as k,X as l,tt as m,p as n,Y as o,it as p,T as q,d as r,H as s,nt as t,st as u,ut as v,U as w,G as x,Q as y,L as z};
